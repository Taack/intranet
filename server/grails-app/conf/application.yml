info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
grails:
  codegen:
    defaultPackage: taack.website
  profile: web
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
  views:
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
    default:
      codec: html
  controllers:
    upload:
      maxFileSize: 536870912
      maxRequestSize: 536870912
  plugin:
    springsecurity:
      rest:
        token:
          storage:
            jwt:
              secret: 'ChangeThisIfUsingSecurityRestGrailsPLugin'

dataSource:
  driverClassName: org.h2.Driver
  username: sa
  password: ''
  pooled: true
  jmxExport: true
environments:
  development:
    dataSource:
      dbCreate: create-drop
      url: jdbc:h2:./intranetDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  test:
    dataSource:
      dbCreate: update
      url: jdbc:h2:mem:testDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  production:
    dataSource:
      dbCreate: update
      url: jdbc:h2:./prodDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
---
taack.admin.password: ChangeIt
---
intranet.noSsh: false
intranet.root: ${HOME}/intranetFilesGH
---
taack-ui:
  defaultTitle: Taack Framework
  root: ${HOME}/taack
  resources: ${HOME}/taack/resources
  #  logoFileName: logo-colored.webp
  logoFileName: logo-taack-web.svg
  logoWidth: 70
  logoHeight: 60
  hasMenuLogin: true
  outlineContainer: false
  bgColor: '#05294c'
  fgColor: '#eeeeee'
  bodyBgColor: '#fff'
  javaPath: /usr/bin/java
  plantUmlPath: ${HOME}/plantuml-1.2022.7.jar
  solrUrl: 'http://localhost:8983/solr/taack'
  disableSecurity: false
---
intercom:
  vegaPath: ${HOME}/dev/yarn/vega/packages/vega-cli/bin/
---
exe:
  dot.path: /usr/bin/dot # Used by Taack-ui to display some graphs
  convertPath: /usr/bin/convert
  unzipPath: /usr/bin/unzip
plm:
  freecadPath: ${HOME}/freecad-app-link
  singleInstance: true
  offscreen: false
  xvfbRun: false
  useWeston: true
edges:
  storePassword: ChangeIt

---
dwg:
  qcadFolder: ${HOME}/qcad-dir-link

stp:
  #  freecadPath: ${HOME}/FreeCAD_1.0.0-conda-Linux-x86_64-py311.AppImage
  freecadPath: ${HOME}/freecad-app-link
  xvfbRun: false
  singleInstance: true
  offscreen: true
  useWeston: true
---

client.js.path: ''
bootstrap.js.tag: '<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" async crossorigin="anonymous"></script>'
bootstrap.css.tag: '<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">'
#client.js.path: 'http://localhost:8080/client.js'

collabora.url: http://localhost:9980/

---
spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
